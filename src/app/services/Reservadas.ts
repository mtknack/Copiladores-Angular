import { Injectable } from '@angular/core';
import { ITabela, Tipo } from './ITabela';

@Injectable({
  providedIn: 'root', // Este serviço será injetado em toda a aplicação
})
export class Reservadas {
  private reservadas: ITabela[] = [];

  constructor() {
    this.inicializareservadas();
  }

  public buscaReservadas(token: string): ITabela | null {
    const reservada = this.reservadas.find((op) => op.textoOriginal === token);
    return reservada ? reservada : null;
  }

  private inicializareservadas() {
    this.reservadas = [
      { textoOriginal: 'abstract', token: ReservadasEnum.PalavrasReservadas.ABSTRACT, tipo: Tipo.RESERVADA },
      { textoOriginal: 'assert', token: ReservadasEnum.PalavrasReservadas.ASSERT, tipo: Tipo.RESERVADA },
      { textoOriginal: 'boolean', token: ReservadasEnum.PalavrasReservadas.BOOLEAN, tipo: Tipo.RESERVADA },
      { textoOriginal: 'break', token: ReservadasEnum.PalavrasReservadas.BREAK, tipo: Tipo.RESERVADA },
      { textoOriginal: 'byte', token: ReservadasEnum.PalavrasReservadas.BYTE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'case', token: ReservadasEnum.PalavrasReservadas.CASE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'catch', token: ReservadasEnum.PalavrasReservadas.CATCH, tipo: Tipo.RESERVADA },
      { textoOriginal: 'char', token: ReservadasEnum.PalavrasReservadas.CHAR, tipo: Tipo.RESERVADA },
      { textoOriginal: 'class', token: ReservadasEnum.PalavrasReservadas.CLASS, tipo: Tipo.RESERVADA },
      { textoOriginal: 'const', token: ReservadasEnum.PalavrasReservadas.CONST, tipo: Tipo.RESERVADA },
      { textoOriginal: 'continue', token: ReservadasEnum.PalavrasReservadas.CONTINUE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'default', token: ReservadasEnum.PalavrasReservadas.DEFAULT, tipo: Tipo.RESERVADA },
      { textoOriginal: 'do', token: ReservadasEnum.PalavrasReservadas.DO, tipo: Tipo.RESERVADA },
      { textoOriginal: 'double', token: ReservadasEnum.PalavrasReservadas.DOUBLE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'else', token: ReservadasEnum.PalavrasReservadas.ELSE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'extends', token: ReservadasEnum.PalavrasReservadas.EXTENDS, tipo: Tipo.RESERVADA },
      { textoOriginal: 'false', token: ReservadasEnum.PalavrasReservadas.FALSE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'final', token: ReservadasEnum.PalavrasReservadas.FINAL, tipo: Tipo.RESERVADA },
      { textoOriginal: 'finally', token: ReservadasEnum.PalavrasReservadas.FINALLY, tipo: Tipo.RESERVADA },
      { textoOriginal: 'string', token: ReservadasEnum.PalavrasReservadas.STRING, tipo: Tipo.RESERVADA },
      { textoOriginal: 'float', token: ReservadasEnum.PalavrasReservadas.FLOAT, tipo: Tipo.RESERVADA },
      { textoOriginal: 'for', token: ReservadasEnum.PalavrasReservadas.FOR, tipo: Tipo.RESERVADA },
      { textoOriginal: 'goto', token: ReservadasEnum.PalavrasReservadas.GOTO, tipo: Tipo.RESERVADA },
      { textoOriginal: 'if', token: ReservadasEnum.PalavrasReservadas.IF, tipo: Tipo.RESERVADA },
      { textoOriginal: 'implements', token: ReservadasEnum.PalavrasReservadas.IMPLEMENTS, tipo: Tipo.RESERVADA },
      { textoOriginal: 'import', token: ReservadasEnum.PalavrasReservadas.IMPORT, tipo: Tipo.RESERVADA },
      { textoOriginal: 'instanceof', token: ReservadasEnum.PalavrasReservadas.INSTANCEOF, tipo: Tipo.RESERVADA },
      { textoOriginal: 'int', token: ReservadasEnum.PalavrasReservadas.INT, tipo: Tipo.RESERVADA },
      { textoOriginal: 'interface', token: ReservadasEnum.PalavrasReservadas.INTERFACE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'long', token: ReservadasEnum.PalavrasReservadas.LONG, tipo: Tipo.RESERVADA },
      { textoOriginal: 'native', token: ReservadasEnum.PalavrasReservadas.NATIVE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'new', token: ReservadasEnum.PalavrasReservadas.NEW, tipo: Tipo.RESERVADA },
      { textoOriginal: 'null', token: ReservadasEnum.PalavrasReservadas.NULL, tipo: Tipo.RESERVADA },
      { textoOriginal: 'package', token: ReservadasEnum.PalavrasReservadas.PACKAGE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'private', token: ReservadasEnum.PalavrasReservadas.PRIVATE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'protected', token: ReservadasEnum.PalavrasReservadas.PROTECTED, tipo: Tipo.RESERVADA },
      { textoOriginal: 'public', token: ReservadasEnum.PalavrasReservadas.PUBLIC, tipo: Tipo.RESERVADA },
      { textoOriginal: 'return', token: ReservadasEnum.PalavrasReservadas.RETURN, tipo: Tipo.RESERVADA },
      { textoOriginal: 'short', token: ReservadasEnum.PalavrasReservadas.SHORT, tipo: Tipo.RESERVADA },
      { textoOriginal: 'static', token: ReservadasEnum.PalavrasReservadas.STATIC, tipo: Tipo.RESERVADA },
      { textoOriginal: 'strictfp', token: ReservadasEnum.PalavrasReservadas.STRICTFP, tipo: Tipo.RESERVADA },
      { textoOriginal: 'super', token: ReservadasEnum.PalavrasReservadas.SUPER, tipo: Tipo.RESERVADA },
      { textoOriginal: 'switch', token: ReservadasEnum.PalavrasReservadas.SWITCH, tipo: Tipo.RESERVADA },
      { textoOriginal: 'synchronized', token: ReservadasEnum.PalavrasReservadas.SYNCHRONIZED, tipo: Tipo.RESERVADA },
      { textoOriginal: 'this', token: ReservadasEnum.PalavrasReservadas.THIS, tipo: Tipo.RESERVADA },
      { textoOriginal: 'throw', token: ReservadasEnum.PalavrasReservadas.THROW, tipo: Tipo.RESERVADA },
      { textoOriginal: 'throws', token: ReservadasEnum.PalavrasReservadas.THROWS, tipo: Tipo.RESERVADA },
      { textoOriginal: 'transient', token: ReservadasEnum.PalavrasReservadas.TRANSIENT, tipo: Tipo.RESERVADA },
      { textoOriginal: 'true', token: ReservadasEnum.PalavrasReservadas.TRUE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'try', token: ReservadasEnum.PalavrasReservadas.TRY, tipo: Tipo.RESERVADA },
      { textoOriginal: 'void', token: ReservadasEnum.PalavrasReservadas.VOID, tipo: Tipo.RESERVADA },
      { textoOriginal: 'volatile', token: ReservadasEnum.PalavrasReservadas.VOLATILE, tipo: Tipo.RESERVADA },
      { textoOriginal: 'while', token: ReservadasEnum.PalavrasReservadas.WHILE, tipo: Tipo.RESERVADA },
      { textoOriginal: '+', token: ReservadasEnum.PalavrasReservadas.ADD, tipo: Tipo.OP_ARITMETICO },
      { textoOriginal: '-', token: ReservadasEnum.PalavrasReservadas.SUBTRACT, tipo: Tipo.OP_ARITMETICO },
      { textoOriginal: '*', token: ReservadasEnum.PalavrasReservadas.MULTIPLY, tipo: Tipo.OP_ARITMETICO },
      { textoOriginal: '/', token: ReservadasEnum.PalavrasReservadas.DIVIDE, tipo: Tipo.OP_ARITMETICO },
      { textoOriginal: '%', token: ReservadasEnum.PalavrasReservadas.MODULO, tipo: Tipo.OP_ARITMETICO },
      { textoOriginal: '++', token: ReservadasEnum.PalavrasReservadas.INCREMENT, tipo: Tipo.OP_ARITMETICO },
      { textoOriginal: '--', token: ReservadasEnum.PalavrasReservadas.DECREMENT, tipo: Tipo.OP_ARITMETICO },
      { textoOriginal: '=', token: ReservadasEnum.PalavrasReservadas.ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '+=', token: ReservadasEnum.PalavrasReservadas.ADD_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '-=', token: ReservadasEnum.PalavrasReservadas.SUBTRACT_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '*=', token: ReservadasEnum.PalavrasReservadas.MULTIPLY_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '/=', token: ReservadasEnum.PalavrasReservadas.DIVIDE_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '%=', token: ReservadasEnum.PalavrasReservadas.MODULO_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '<<=', token: ReservadasEnum.PalavrasReservadas.LEFT_SHIFT_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '>>=', token: ReservadasEnum.PalavrasReservadas.RIGHT_SHIFT_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '>>>=', token: ReservadasEnum.PalavrasReservadas.UNSIGNED_RIGHT_SHIFT_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '&=', token: ReservadasEnum.PalavrasReservadas.AND_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '|=', token: ReservadasEnum.PalavrasReservadas.OR_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '^=', token: ReservadasEnum.PalavrasReservadas.XOR_ASSIGN, tipo: Tipo.OP_ATRIBUICAO },
      { textoOriginal: '==', token: ReservadasEnum.PalavrasReservadas.EQUALS, tipo: Tipo.OP_COMPARACAO },
      { textoOriginal: '!=', token: ReservadasEnum.PalavrasReservadas.NOT_EQUALS, tipo: Tipo.OP_COMPARACAO },
      { textoOriginal: '<', token: ReservadasEnum.PalavrasReservadas.LESS_THAN, tipo: Tipo.OP_COMPARACAO },
      { textoOriginal: '>', token: ReservadasEnum.PalavrasReservadas.GREATER_THAN, tipo: Tipo.OP_COMPARACAO },
      { textoOriginal: '<=', token: ReservadasEnum.PalavrasReservadas.LESS_THAN_OR_EQUALS, tipo: Tipo.OP_COMPARACAO },
      { textoOriginal: '>=', token: ReservadasEnum.PalavrasReservadas.GREATER_THAN_OR_EQUALS, tipo: Tipo.OP_COMPARACAO },
      { textoOriginal: '&&', token: ReservadasEnum.PalavrasReservadas.LOGICAL_AND, tipo: Tipo.OP_LOGICO },
      { textoOriginal: '||', token: ReservadasEnum.PalavrasReservadas.LOGICAL_OR, tipo: Tipo.OP_LOGICO },
      { textoOriginal: '!', token: ReservadasEnum.PalavrasReservadas.LOGICAL_NOT, tipo: Tipo.OP_LOGICO },
      { textoOriginal: ';', token: ReservadasEnum.PalavrasReservadas.SEMICOLON, tipo: Tipo.PONTUACAO },
      { textoOriginal: ',', token: ReservadasEnum.PalavrasReservadas.COMMA, tipo: Tipo.PONTUACAO },
      { textoOriginal: '.', token: ReservadasEnum.PalavrasReservadas.PERIOD, tipo: Tipo.PONTUACAO },
      { textoOriginal: '(', token: ReservadasEnum.PalavrasReservadas.LEFT_PARENTHESIS, tipo: Tipo.PONTUACAO },
      { textoOriginal: ')', token: ReservadasEnum.PalavrasReservadas.RIGHT_PARENTHESIS, tipo: Tipo.PONTUACAO },
      { textoOriginal: '{', token: ReservadasEnum.PalavrasReservadas.LEFT_BRACE, tipo: Tipo.PONTUACAO },
      { textoOriginal: '}', token: ReservadasEnum.PalavrasReservadas.RIGHT_BRACE, tipo: Tipo.PONTUACAO },
      { textoOriginal: '[', token: ReservadasEnum.PalavrasReservadas.LEFT_BRACKET, tipo: Tipo.PONTUACAO },
      { textoOriginal: ']', token: ReservadasEnum.PalavrasReservadas.RIGHT_BRACKET, tipo: Tipo.PONTUACAO },
      { textoOriginal: ':', token: ReservadasEnum.PalavrasReservadas.COLON, tipo: Tipo.PONTUACAO }
    ];
  }
}

export namespace ReservadasEnum {
  export enum PalavrasReservadas {
    ABSTRACT = 'ABSTRACT',
    ASSERT = 'ASSERT',
    BOOLEAN = 'BOOLEAN',
    BREAK = 'BREAK',
    BYTE = 'BYTE',
    CASE = 'CASE',
    CATCH = 'CATCH',
    CHAR = 'CHAR',
    CLASS = 'CLASS',
    CONST = 'CONST',
    CONTINUE = 'CONTINUE',
    DEFAULT = 'DEFAULT',
    DO = 'DO',
    DOUBLE = 'DOUBLE',
    ELSE = 'ELSE',
    EXTENDS = 'EXTENDS',
    FALSE = 'FALSE',
    FINAL = 'FINAL',
    FINALLY = 'FINALLY',
    STRING = 'STRING',
    FLOAT = 'FLOAT',
    FOR = 'FOR',
    GOTO = 'GOTO',
    IF = 'IF',
    IMPLEMENTS = 'IMPLEMENTS',
    IMPORT = 'IMPORT',
    INSTANCEOF = 'INSTANCEOF',
    INT = 'INT',
    INTERFACE = 'INTERFACE',
    LONG = 'LONG',
    NATIVE = 'NATIVE',
    NEW = 'NEW',
    NULL = 'NULL',
    PACKAGE = 'PACKAGE',
    PRIVATE = 'PRIVATE',
    PROTECTED = 'PROTECTED',
    PUBLIC = 'PUBLIC',
    RETURN = 'RETURN',
    SHORT = 'SHORT',
    STATIC = 'STATIC',
    STRICTFP = 'STRICTFP',
    SUPER = 'SUPER',
    SWITCH = 'SWITCH',
    SYNCHRONIZED = 'SYNCHRONIZED',
    THIS = 'THIS',
    THROW = 'THROW',
    THROWS = 'THROWS',
    TRANSIENT = 'TRANSIENT',
    TRUE = 'TRUE',
    TRY = 'TRY',
    VOID = 'VOID',
    VOLATILE = 'VOLATILE',
    WHILE = 'WHILE',
    ADD = 'ADD',
    SUBTRACT = 'SUBTRACT',
    MULTIPLY = 'MULTIPLY',
    DIVIDE = 'DIVIDE',
    MODULO = 'MODULO',
    INCREMENT = 'INCREMENT',
    DECREMENT = 'DECREMENT',
    ASSIGN = 'ASSIGN',
    ADD_ASSIGN = 'ADD_ASSIGN',
    SUBTRACT_ASSIGN = 'SUBTRACT_ASSIGN',
    MULTIPLY_ASSIGN = 'MULTIPLY_ASSIGN',
    DIVIDE_ASSIGN = 'DIVIDE_ASSIGN',
    MODULO_ASSIGN = 'MODULO_ASSIGN',
    LEFT_SHIFT_ASSIGN = 'LEFT_SHIFT_ASSIGN',
    RIGHT_SHIFT_ASSIGN = 'RIGHT_SHIFT_ASSIGN',
    UNSIGNED_RIGHT_SHIFT_ASSIGN = 'UNSIGNED_RIGHT_SHIFT_ASSIGN',
    AND_ASSIGN = 'AND_ASSIGN',
    OR_ASSIGN = 'OR_ASSIGN',
    XOR_ASSIGN = 'XOR_ASSIGN',
    EQUALS = 'EQUALS',
    NOT_EQUALS = 'NOT_EQUALS',
    LESS_THAN = 'LESS_THAN',
    GREATER_THAN = 'GREATER_THAN',
    LESS_THAN_OR_EQUALS = 'LESS_THAN_OR_EQUALS',
    GREATER_THAN_OR_EQUALS = 'GREATER_THAN_OR_EQUALS',
    LOGICAL_AND = 'LOGICAL_AND',
    LOGICAL_OR = 'LOGICAL_OR',
    LOGICAL_NOT = 'LOGICAL_NOT',
    SEMICOLON = 'SEMICOLON',
    COMMA = 'COMMA',
    PERIOD = 'PERIOD',
    LEFT_PARENTHESIS = 'LEFT_PARENTHESIS',
    RIGHT_PARENTHESIS = 'RIGHT_PARENTHESIS',
    LEFT_BRACE = 'LEFT_BRACE',
    RIGHT_BRACE = 'RIGHT_BRACE',
    LEFT_BRACKET = 'LEFT_BRACKET',
    RIGHT_BRACKET = 'RIGHT_BRACKET',
    COLON = 'COLON'
  };
}